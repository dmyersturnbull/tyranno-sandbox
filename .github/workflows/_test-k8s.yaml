# SPDX-FileCopyrightText: Copyright 2020-2025, Contributors to Tyrannosaurus
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyrannosaurus
# SPDX-License-Identifier: Apache-2.0

# Reusable workflow that tests Helm charts by deploying in a test cluster.
# TODO: This is experimental.
run-name: Test ${{ inputs.ref }} on K8s

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true
        description: A branch or tag ref; defaults to github.head_ref then to github.ref.
      only-if-changed:
        type: boolean
        default: false
        description: Skip testing if the charts are identical to the current stable release's.
      cancel-in-progress:
        type: boolean
        description: >-
          Cancel already-running runs for the same ref.
          Enable for ad-hoc checks, but keep disabled otherwise.
          This is important if 'ref' is an "abbreviated ref" rather than a hash.

concurrency:
  group: _test-k8s / ${{ inputs.ref }}
  cancel-in-progress: ${{ inputs.cancel-in-progress }}

jobs:
  lint-helm:
    runs-on: ubuntu-latest
    env:
      ONLY_IF_CHANGED: ${{ inputs.only-if-changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: astral-sh/setup-uv@v6 # Some subsequent tools expect Python.
        with:
          activate-environment: true
      - uses: azure/setup-helm@v4.2.0
        with:
          version: v3.17.0
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0
      - name: Run chart-testing (list-changed)
        id: list-changed
        shell: bash
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" || "$ONLY_IF_CHANGED" != true ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
          printf "Changes:\n%s\n" "$changed"
      - if: steps.list-changed.outputs.changed == 'true'
        name: Create kind cluster
        uses: helm/kind-action@v1.12.0
      - if: steps.list-changed.outputs.changed == 'true'
        name: Run chart-testing (install)
        shell: bash
        run: |
          ct install --target-branch '${{ inputs.ref }}'
