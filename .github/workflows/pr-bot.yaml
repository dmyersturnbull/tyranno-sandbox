# SPDX-FileCopyrightText: Copyright 2020-2025, Contributors to Tyrannosaurus
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyrannosaurus
# SPDX-License-Identifier: Apache-2.0

# Responds to `/plz <command>` comments on pull requests.
name: pr-bot
run-name: PR ${{ github.event.pull_request.number }} comment by ${{ github.sender.login }}

on:
  issue_comment:
    types:
      - created
      - edited

permissions:
  contents: read

env:
  NULLARY_CMD: >-
    ^\/plz ++(?<cmd>[a-z0-9 -]++) *+$

jobs:
  # Parse the body and find lines matching `/plz <cmd> [<ref>]`.
  # Individual jobs could check e.g. `contains(github.event.comment.body, '/plz test')`.
  # However, that can't capture command "arguments" (though, currently, we only need `<ref>`).
  # Note that we allow multiple commands per comment.
  # To associate arguments with their respective commands, we need Bash for regex, etc.
  # TODO: We need more robust parsing.
  cmd:
    if: ${{ github.event.issue.pull_request }}
    name: Parse comment cmd
    runs-on: ubuntu-latest
    env:
      TEXT: ${{ github.event.comment.body }}
    outputs:
      nullary: ${{ steps.extract.outputs.nullary }}
    steps:
      - name: Extract commands using regex
        id: extract
        shell: bash
        run: |
          nullary=$( \
            grep --only-matching --perl-regexp "$NULLARY_CMD" <<< "$TEXT" \
              | sed -E 's/-/ /g' \
              | sed -E 's/plz ++//g' \
          )
          echo "nullary=$nullary" >> "$GITHUB_OUTPUT"

  lint:
    if: ${{ contains(needs.cmd.outputs.nullary, 'lint') }}
    needs: cmd
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/lint-python/action.yaml
        with:
          ref: ${{ github.head_ref }}
      - uses: ./.github/actions/lint-dockerfile/action.yaml
        with:
          ref: ${{ github.head_ref }}
      - uses: ./.github/actions/lint-data-files/action.yaml
        with:
          ref: ${{ github.head_ref }}
      - uses: ./.github/actions/lint-helm-charts/action.yaml
        with:
          ref: ${{ github.head_ref }}

  check-image:
    if: ${{ contains(needs.cmd.outputs.nullary, 'check image') }}
    needs: cmd
    uses: ./.github/workflows/_test-docker.yaml
    with:
      ref: ${{ github.head_ref }}

  check-docs:
    if: ${{ contains(needs.cmd.outputs.nullary, 'check docs') }}
    needs: cmd
    uses: ./.github/actions/check-mkdocs/action.yaml

  test:
    if: ${{ contains(needs.cmd.outputs.nullary, 'test') }}
    needs: cmd
    uses: ./.github/workflows/_test-pytest-matrix.yaml

  upgrade:
    if: ${{ contains(needs.cmd.outputs.nullary, 'upgrade') }}
    needs: cmd
    permissions:
      contents: write
    uses: ./.github/actions/do-bump-dependencies/action.yaml
    with:
      ref: ${{ github.head_ref }}

  format:
    if: ${{ contains(needs.cmd.outputs.nullary, 'format') }}
    needs: cmd
    permissions:
      contents: write
    uses: ./.github/actions/do-auto-format/action.yaml
    with:
      ref: ${{ github.head_ref }}
      compare-to-ref: ${{ github.base_ref }}
      push: true
