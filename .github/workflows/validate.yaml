# SPDX-FileCopyrightText: Copyright 2020-2025, Contributors to Tyrannosaurus
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyrannosaurus
# SPDX-License-Identifier: Apache-2.0

# Verifies that we can start the release process when a tag `v<major>.<minor>.<build>` is pushed.
name: validate-release
run-name: >-
  Validate release of ${{ github.ref_name }} (triggered by ${{ github.triggering_actor }})

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

concurrency:
  # In contrast, the `publish` workflow uses the constant group `publish`
  # (with `cancel-in-progress` set to FALSE).
  # It's safe to cancel runs of `validate`, but not of `publish`.
  # We'll let runs proceed here, then bottle up against the start of `publish`.
  group: ${{ github.workflow }} / ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  #
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      is-match: ${{ steps.match.outputs.match }}
    steps:
      - id: match
        shell: bash
        run: |
          regex_1='^v[0-9]+\.[0-9]+\.[0-9]+$'
          regex_2='^v[0-9]+\.[0-9]+\.[0-9]+-((alpha|beta|rc)\.)?\d+$'
          if [[ "$GITHUB_REF" =~ $regex_1 ]]; then
            printf "Accepting %s for real release.\n" "$GITHUB_REF_NAME"
            echo "match=true" >> $GITHUB_OUTPUT
          elif [[ "$GITHUB_REF" =~ $regex_2 ]]; then
            printf "Accepting %s for preview/test release only.\n" "$GITHUB_REF_NAME"
            echo "match=true" >> $GITHUB_OUTPUT
          fi

  guard:
    if: ${{ needs.check-tag.outputs.is-match }}
    needs: check-tag
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run: |
          printf "Proceeding.\n"

  check-hooks:
    needs: guard
    uses: ./.github/actions/check-hooks/action.yaml

  run-tests:
    needs: guard
    uses: ./.github/workflows/_test-pytest-matrix.yaml

  check-security:
    needs: guard
    uses: ./.github/actions/lint-python/action.yaml
    with:
      ruff-rules: S

  check-docker:
    needs: guard
    uses: ./.github/workflows/_test-docker.yaml

  build-and-upload-dist:
    needs:
      - check-hooks
      - run-tests
      - check-security
      - check-docker
    permissions:
      contents: write
    uses: ./.github/actions/build-and-upload-dist/action.yaml
